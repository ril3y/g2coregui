# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.7.2 on Thu Oct 12 21:26:12 2017
#

import wx
import gcodeFile

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        self.ID_MENU_OPEN_GCODE = wx.NewId()
        self.ID_MENU_SEND_GCODE = wx.NewId()
        
        # begin wxGlade: MainFrame.__init__
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.mainFrame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(self.ID_MENU_OPEN_GCODE, _("&Open Gcode\tCTRL+O"), "", wx.ITEM_NORMAL)
        self.mainFrame_menubar.Append(wxglade_tmp_menu, _("&File"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(self.ID_MENU_SEND_GCODE, _("&Send Gcode"), "", wx.ITEM_NORMAL)
        self.mainFrame_menubar.Append(wxglade_tmp_menu, _("&Tools"))
        self.SetMenuBar(self.mainFrame_menubar)
        # Menu Bar end
        self.window_1 = wx.SplitterWindow(self, wx.ID_ANY)
        self.window_1_pane_1 = wx.Panel(self.window_1, wx.ID_ANY)
        self.digitalReadOut = wx.TextCtrl(self.window_1_pane_1, wx.ID_ANY, _("X: ?\nY: ?\nZ: ?\nA: ?"), style=wx.TE_DONTWRAP | wx.TE_MULTILINE | wx.TE_READONLY)
        self.term = wx.Panel(self.window_1, wx.ID_ANY)
        self.log = wx.TextCtrl(self.term, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY)
        self.manualInput = wx.TextCtrl(self.term, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
        self.notebook_2 = wx.Notebook(self, wx.ID_ANY)
        self.notebook_2_pane_1 = wx.Panel(self.notebook_2, wx.ID_ANY)
        self.xMinus = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("X-"))
        self.yMinus = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("Y-"))
        self.xYFeedRate = wx.TextCtrl(self.notebook_2_pane_1, wx.ID_ANY, _("100"))
        self.yPlus = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("Y+"))
        self.xPlus = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("X+"))
        self.zPlus = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("Z+"))
        self.zFeedRate = wx.TextCtrl(self.notebook_2_pane_1, wx.ID_ANY, _("10"))
        self.zMinus = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("Z-"))
        self.step10 = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("10"))
        self.step1 = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("1"))
        self.step01 = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("0.1"))
        self.step001 = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("0.01"))
        self.step0001 = wx.Button(self.notebook_2_pane_1, wx.ID_ANY, _("0.001"))
        self.actualStepSize = wx.TextCtrl(self.notebook_2_pane_1, wx.ID_ANY, _("1"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.onMenuOpenGcode, id=self.ID_MENU_OPEN_GCODE)
        self.Bind(wx.EVT_MENU, self.onMenuSendGCode, id=self.ID_MENU_SEND_GCODE)
        self.Bind(wx.EVT_TEXT_ENTER, self.onManualInput, self.manualInput)
        self.Bind(wx.EVT_BUTTON, self.onJogXMinus, self.xMinus)
        self.Bind(wx.EVT_BUTTON, self.onJogYMinus, self.yMinus)
        self.Bind(wx.EVT_BUTTON, self.onJogYPlus, self.yPlus)
        self.Bind(wx.EVT_BUTTON, self.onJogXPlus, self.xPlus)
        self.Bind(wx.EVT_BUTTON, self.onJogZPlus, self.zPlus)
        self.Bind(wx.EVT_BUTTON, self.onJogZMinus, self.zMinus)
        self.Bind(wx.EVT_BUTTON, self.onStepSize10, self.step10)
        self.Bind(wx.EVT_BUTTON, self.onStepSize1, self.step1)
        self.Bind(wx.EVT_BUTTON, self.onStepSize01, self.step01)
        self.Bind(wx.EVT_BUTTON, self.onStepSize001, self.step001)
        self.Bind(wx.EVT_BUTTON, self.onStepSize0001, self.step0001)
        # end wxGlade

        self.openGcodeDialog = wx.FileDialog(self, message="Choose a Gcode file",
                                             wildcard = "GCode files (*.nc;*.gcode;*.g)|*.nc;*.gcode;*.g|All files (*.*)|*.*",style=wx.FD_OPEN|wx.FD_FILE_MUST_EXIST)

    def __set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle(_("g2coreGUI"))
        self.digitalReadOut.SetFont(wx.Font(24, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.xMinus.SetMinSize((42, 42))
        self.yMinus.SetMinSize((42, 42))
        self.yPlus.SetMinSize((42, 42))
        self.xPlus.SetMinSize((42, 42))
        self.zPlus.SetMinSize((42, 42))
        self.zMinus.SetMinSize((42, 42))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11 = wx.StaticBoxSizer(wx.StaticBox(self.notebook_2_pane_1, wx.ID_ANY, _("Step Size")), wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        terminalSizer = wx.StaticBoxSizer(wx.StaticBox(self.term, wx.ID_ANY, _("Terminal")), wx.VERTICAL)
        sizer_3 = wx.StaticBoxSizer(wx.StaticBox(self.window_1_pane_1, wx.ID_ANY, _("DRO")), wx.VERTICAL)
        sizer_3.Add(self.digitalReadOut, 1, wx.ALL | wx.EXPAND, 3)
        self.window_1_pane_1.SetSizer(sizer_3)
        terminalSizer.Add(self.log, 1, wx.ALL | wx.EXPAND, 3)
        terminalSizer.Add(self.manualInput, 0, wx.ALL | wx.EXPAND, 3)
        self.term.SetSizer(terminalSizer)
        self.window_1.SplitVertically(self.window_1_pane_1, self.term, 150)
        sizer_1.Add(self.window_1, 1, wx.EXPAND, 0)
        sizer_8.Add(self.xMinus, 0, wx.ALIGN_CENTER | wx.ALL, 8)
        sizer_9.Add(self.yMinus, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 8)
        sizer_9.Add((1, 1), 1, wx.EXPAND, 0)
        sizer_9.Add(self.xYFeedRate, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)
        sizer_9.Add((1, 1), 1, wx.EXPAND, 0)
        sizer_9.Add(self.yPlus, 0, wx.ALIGN_BOTTOM | wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 8)
        sizer_8.Add(sizer_9, 1, wx.EXPAND, 0)
        sizer_8.Add(self.xPlus, 0, wx.ALIGN_CENTER | wx.ALL, 8)
        sizer_10.Add(self.zPlus, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 8)
        sizer_10.Add((1, 1), 1, wx.EXPAND, 0)
        sizer_10.Add(self.zFeedRate, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)
        sizer_10.Add((1, 1), 1, wx.EXPAND, 0)
        sizer_10.Add(self.zMinus, 0, wx.ALIGN_BOTTOM | wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 8)
        sizer_8.Add(sizer_10, 1, wx.EXPAND, 0)
        sizer_11.Add(self.step10, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)
        sizer_11.Add(self.step1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)
        sizer_11.Add(self.step01, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)
        sizer_11.Add(self.step001, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)
        sizer_11.Add(self.step0001, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 3)
        sizer_11.Add(self.actualStepSize, 0, wx.ALL | wx.EXPAND, 3)
        sizer_8.Add(sizer_11, 1, 0, 0)
        sizer_7.Add(sizer_8, 1, 0, 0)
        self.notebook_2_pane_1.SetSizer(sizer_7)
        self.notebook_2.AddPage(self.notebook_2_pane_1, _("Jog"))
        sizer_6.Add(self.notebook_2, 1, 0, 0)
        sizer_1.Add(sizer_6, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def onMenuOpenGcode(self, event):  # wxGlade: MainFrame.<event_handler>
        if self.openGcodeDialog.ShowModal() == wx.ID_OK:
            application = wx.App.Get()
            application.backend.setGCode(gcodeFile.gcodeFile(self.openGcodeDialog.GetPath()))

    def onMenuSendGCode(self, event):  # wxGlade: MainFrame.<event_handler>
        application = wx.App.Get()
        application.backend.startSendingGCode()

    def onManualInput(self, event):  # wxGlade: MainFrame.<event_handler>
        application = wx.App.Get()
        application.backend.appendUserCommandToQueue(self.manualInput.GetValue())
        self.manualInput.Clear()

    def updateLog(self, logHistory):
        self.log.SetValue(logHistory.getLastNLinesAsText(100))
        self.log.SetInsertionPointEnd()

    def sendJogMove(self, posString, feedRate):
        application = wx.App.Get()
        command = "G1 "+posString+" F"+str(feedRate)
        application.backend.appendUserCommandToQueue(command)
        
    def doJog(self, x,y,z,a,b,c):
        application = wx.App.Get()
        dro = application.backend.digitalReadOut
        stepSize = float(self.actualStepSize.GetValue())
        xYFeedRate = float(self.xYFeedRate.GetValue())
        zFeedRate = float(self.zFeedRate.GetValue())
        if (x!=0):
            pos = dro.getValue("x")
            if (pos != None):
                if x==1:
                    pos += stepSize
                elif x==-1:
                    pos -= stepSize 
                self.sendJogMove("X"+str(pos), xYFeedRate)
        if (y!=0):
            pos = dro.getValue("y")
            if (pos != None):
                if y==1:
                    pos += stepSize
                elif y==-1:
                    pos -= stepSize 
                self.sendJogMove("Y"+str(pos), xYFeedRate)
        if (z!=0):
            pos = dro.getValue("z")
            if (pos != None):
                if z==1:
                    pos += stepSize
                elif z==-1:
                    pos -= stepSize 
                self.sendJogMove("Z"+str(pos), zFeedRate)

    def onJogXMinus(self, event):  # wxGlade: MainFrame.<event_handler>
        self.doJog(-1,0,0, 0,0,0)
    def onJogYMinus(self, event):  # wxGlade: MainFrame.<event_handler>
        self.doJog(0,-1,0, 0,0,0)
    def onJogYPlus(self, event):  # wxGlade: MainFrame.<event_handler>
        self.doJog(0,1,0, 0,0,0)
    def onJogXPlus(self, event):  # wxGlade: MainFrame.<event_handler>
        self.doJog(1,0,0, 0,0,0)
    def onJogZPlus(self, event):  # wxGlade: MainFrame.<event_handler>
        self.doJog(0,0,1, 0,0,0)
    def onJogZMinus(self, event):  # wxGlade: MainFrame.<event_handler>
        self.doJog(0,0,-1, 0,0,0)

    def updateDRO(self, dro):
        text = "";
        text += "X: "+dro.getValueAsText("x")+"\n"
        text += "Y: "+dro.getValueAsText("y")+"\n"
        text += "Z: "+dro.getValueAsText("z")+"\n"
        text += "A: "+dro.getValueAsText("a")+"\n"
        self.digitalReadOut.SetValue(text)
        
    def onStepSize10(self, event):  # wxGlade: MainFrame.<event_handler>
        self.actualStepSize.SetValue(str(10))

    def onStepSize1(self, event):  # wxGlade: MainFrame.<event_handler>
        self.actualStepSize.SetValue(str(1))

    def onStepSize01(self, event):  # wxGlade: MainFrame.<event_handler>
        self.actualStepSize.SetValue(str(0.1))

    def onStepSize001(self, event):  # wxGlade: MainFrame.<event_handler>
        self.actualStepSize.SetValue(str(0.01))

    def onStepSize0001(self, event):  # wxGlade: MainFrame.<event_handler>
        self.actualStepSize.SetValue(str(0.001))

# end of class MainFrame
